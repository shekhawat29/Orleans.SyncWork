name: Build and test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:

  check-code-formatting:
    runs-on: ubuntu-latest
    name: Check code formating against editorconfig

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Install dotnet-format tool
      run: dotnet tool install -g dotnet-format
    
    - name: Check Code Format
      run: dotnet-format --check

  build-and-test:

    runs-on: ubuntu-latest
    name: dotnet build and test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Run SonarQube Scanner
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    run: |
      dotnet tool install --global dotnet-sonarscanner
      dotnet sonarscanner begin /k:".net" /d:sonar.host.url="http://20.192.19.199" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      dotnet build --configuration Release
      dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"


    
    - name: Test
      run: dotnet test test/Orleans.SyncWork.Tests/Orleans.SyncWork.Tests.csproj -c Release --no-build --verbosity normal --filter "Category!=LongRunning"
